#include <iostream>
using namespace std;
#include "circle.h"
#include "pointer.h"

//点和圆关系案例
////点类
//class Pointer
//{
//public:
//	//设置x
//	void setX(int x)
//	{
//		m_X = x;
//	}
//	//获取x
//	int getX()
//	{
//		return m_X;
//	}
//	//设置y
//	void setY(int y)
//	{
//		m_Y = y;
//	}
//	//获取y
//	int getY()
//	{
//		return m_Y;
//	}
//private:
//	int m_X;
//	int m_Y;
//};

////圆类
//class Circle
//{
//public:
//	//设计半径
//	void setR(int r)
//	{
//		m_R = r;
//	}
//	//获取半径
//	int getR()
//	{
//		return m_R;
//	}
//	//设置圆心
//	void setCenter(Pointer center)
//	{
//		m_Center = center;
//	}
//	//获取圆心
//	Pointer getCenter()
//	{
//		return m_Center;
//	}
//private:
//	int m_R;//半径
//	//在类中可以让另一个类,作为本类中的成员
//	Pointer m_Center;//圆心
//};

//判断点和圆关系
void isInCircle(Circle& circle, Pointer& pointer)
{
	//计算两点之间距离 平方
	int distance = (circle.getCenter().getX() - pointer.getX()) * (circle.getCenter().getX() - pointer.getX()) +
		(circle.getCenter().getY() - pointer.getY()) * (circle.getCenter().getY() - pointer.getY());
	//计算半径的平方
	int rDistance = circle.getR() * circle.getR();
	//判断关系
	if (distance == rDistance)
	{
		cout << "点在圆上" << endl;
	}
	else if(distance > rDistance)
	{
		cout << "点在圆外" << endl;
	}
	else
	{
		cout << "点在圆内" << endl;
	}
}


int main(int argc, char* argv[])
{

	//创建圆
	Circle circle;
	circle.setR(10);
	Pointer center;
	center.setX(10);
	center.setY(0);
	circle.setCenter(center);
	//创建点
	Pointer pointer;
	pointer.setX(10);
	pointer.setY(10);
	//判断关系
	isInCircle(circle, pointer);
	return 0;
}
